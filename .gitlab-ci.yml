variables:
  GIT_STRATEGY: clone

workflow:
  rules:
    - if: $CI_COMMIT_BRANCH
    - if: $CI_COMMIT_TAG

stages:
  - publish

# Template for building and publishing OCI (Docker) images

.publish:
  stage: publish
  image: docker:20.10.7
  services:
    - docker:20.10.7-dind
  before_script:
    - apk add make git
    - echo $PASSWORD | docker login --username $USERNAME --password-stdin $REGISTRY
  script:
    - make build
    - make push

# Publish development version to GitLab on non-tag commit

publish-dev:
  extends: .publish
  variables:
    REGISTRY: $CI_REGISTRY
    USERNAME: $CI_REGISTRY_USER
    PASSWORD: $CI_REGISTRY_PASSWORD
    PREFIX: $CI_REGISTRY_IMAGE
    GITHASH: $CI_COMMIT_SHORT_SHA
  rules:
    - if: '$CI_COMMIT_TAG == null || $CI_COMMIT_TAG == ""'

# Publish release to artefact repository on tag commit on master

publish-release:
  extends: .publish
  variables:
    REGISTRY: $CAR_OCI_REGISTRY_HOST
    USERNAME: $CAR_OCI_REGISTRY_USERNAME
    PASSWORD: $CAR_OCI_REGISTRY_PASSWORD
    PREFIX: $CAR_OCI_REGISTRY_HOST
    RELEASE: "true"
  only:
    variables:
       - $CI_COMMIT_MESSAGE =~ /^.+$/ # Confirm tag message exists
       - $CI_COMMIT_TAG =~ /^((([0-9]+)\.([0-9]+)\.([0-9]+)(?:-([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?)(?:\+([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?)$/ #Confirm semantic versioning of tag
  except:
    - branches

# Create Gitlab CI badges from CI metrics
# https://developer.skatelescope.org/en/latest/tools/continuousintegration.html#automated-collection-of-ci-health-metrics-as-part-of-the-ci-pipeline
include:
  - project: 'ska-telescope/templates-repository'
    file: 'gitlab-ci/includes/post_step.yml'
